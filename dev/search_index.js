var documenterSearchIndex = {"docs":
[{"location":"api/#Library-Reference","page":"Library Reference","title":"Library Reference","text":"","category":"section"},{"location":"api/#Core.Type-Union{Tuple{S}, Tuple{Dgm}, Tuple{I}, Tuple{AbstractVector, AbstractVector{S}, AbstractDict{S}}} where {I<:Integer, Dgm<:(WiringDiagram{I, L, XPrt, Wre, OutWre} where {L, XPrt<:AbstractVector{I}, Wre<:AbstractVector{I}, OutWre<:AbstractVector{I}}), S}","page":"Library Reference","title":"Core.Type","text":"WiringDiagram(inputs::AbstractVector, output::AbstractVector[, label::AbstractDict])\n\nConstruct a wiring diagram. The vector inputs specifies the function\n\nport(b, i) := inputs[b][i]\n\nfor all boxes b ∈ B and i ∈ {1, ..., |box⁻¹(b)|}. The vector output specifies the function\n\noutwire(q) := output[q]\n\nfor all outer ports q ∈ Q, and the dictionary label specifies the function\n\nlabel(w) := label[w]\n\nfor all wires w ∈ W. If label is omitted, then the constructed wiring diagram will be unlabeled (i.e. all labels will be set to nothing).\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.AbstractAlgebra","page":"Library Reference","title":"WiringDiagrams.AbstractAlgebra","text":"AbstractAlgebra{A}\n\nA wiring diagram algebra a is a higher-order function that transforms each wiring diagram d into a multi-function\n\na(d): X₁, ..., Xₙ → Y.\n\n\n\n\n\n","category":"type"},{"location":"api/#WiringDiagrams.AbstractDendrogram","page":"Library Reference","title":"WiringDiagrams.AbstractDendrogram","text":"AbstractDendrogram{I, L}\n\nA labelled dendrogram is a commutative dendrogram in Set of the form\n\n+ -------------------- +\n|         L label      |\n|    wire ↑ outbox     |\n|     P → W ← Q        |\n| box ↓   ↓   ↓ outbox |\n|     B → C ← C        |\n|  parent  outparent   |\n+ -------------------- +\n\nwhere\n\nB is a set of boxes\nC is a set of outer boxes\nW is a set of wires\nP is a set of ports\nQ is a set of outer ports\nL is a set of labels\n\nThe functions parent and outparent define a rooted tree with leaves B and branches C.\n\n+ --------------- +\n|         c       |\n|         ↓       |\n|         c       |\n|       ↙ ↓  ↘    |\n|     c   c    b  |\n|   ↙   ↘   ↘     |\n|  b     b    b   |\n+ --------------- +\n\nThe sets B, C, W, P, and Q are contiguous sets of natural numbers\n\nB = {1, ..., |B|}\nC = {1, ..., |C|}\nW = {1, ..., |W|}\nP = {1, ..., |P|}\nQ = {1, ..., |Q|}\n\nand the set L is an arbitrary Julia type like Symbol or Int. The functions\n\nbox: P → B\noutbox: Q → C\nwirebox: W → C\n\nare monotonically increasing, to that for all boxes b ∈ B and outer boxes c ∈ C, the pre-images\n\nbox⁻¹(b) = {p ∈ P : box(p) = b} ⊆ P\noutbox⁻¹(c) = {q ∈ Q : outbox(q) = c} ⊆ Q \nwirebox⁻¹(c) = {w ∈ W : wirebox(w) = c} ⊆ W\n\nare contiguos sets of natural numbers:\n\nbox⁻¹(b) = {p, ..., p + |box⁻¹(b)| - 1} ⊆ P\noutbox⁻¹(c) = {q, ..., q + |outbox⁻¹(c)| - 1} ⊆ Q\nwirebox⁻¹(c) = {w, ..., w + |wirebox⁻¹(c)| - 1} ⊆ W\n\nHence, there are functions port, outport, and boxwire which map each box b ∈ B, outer box c ∈ C, and numbers\n\n1 ≤ i ≤ |box⁻¹(b)|\n1 ≤ j ≤ |outbox⁻¹(c)|\n1 ≤ k ≤ |wirebox⁻¹(c)|\n\nto the objects\n\nport(b, i) := p + i - 1 ∈ box⁻¹(b)\noutport(q, j) := q + j - 1 ∈ outbox⁻¹(c)\nboxwire(w, k) := w + k - 1 ∈ wirebox⁻¹(c)\n\n\n\n\n\n","category":"type"},{"location":"api/#WiringDiagrams.AbstractOperation","page":"Library Reference","title":"WiringDiagrams.AbstractOperation","text":"AbstractOperation{I, L}\n\nA morphism in a multi-category.\n\n\n\n\n\n","category":"type"},{"location":"api/#WiringDiagrams.AbstractWiringDiagram","page":"Library Reference","title":"WiringDiagrams.AbstractWiringDiagram","text":"AbstractWiringDiagram{I, L} <: AbstractOperation{I, L}\n\nA labelled wiring diagram is a diagram in Set of the form\n\n+ --------------- +\n|       B         |\n|       ↑ box     |\n|       P         |\n| label ↓ wire    |\n|   L ← W         |\n|       ↑ outwire |\n|       Q         |\n+ --------------- +\n\nwhere\n\nB is a set of boxes\nW is a set of wires\nP is a set of ports\nQ is a set of outer ports\nL is a set of labels\n\nThe sets B, W, P, and Q are contiguous sets of natural numbers\n\nB = {1, ..., |B|}\nW = {1, ..., |W|}\nP = {1, ..., |P|}\nQ = {1, ..., |Q|}\n\nand the set L is an arbitrary Julia type like Symbol or Int. The function box: P → Q is monotonically increasing, so that for all boxes b ∈ B, the pre-image\n\nbox⁻¹(b) = {p ∈ P : box(p) = b} ⊆ P\n\nis a contiguous set of natural numbers\n\nbox⁻¹(b) = {p, ..., p + |box⁻¹(b)| - 1} ⊆ P.\n\nHence, there is a function port which maps each box b ∈ B and number 1 ≤ i ≤ |box⁻¹(b)| to the port\n\nport(b, i) := p + i - 1 ∈ box⁻¹(b).\n\n\n\n\n\n","category":"type"},{"location":"api/#WiringDiagrams.Dendrogram","page":"Library Reference","title":"WiringDiagrams.Dendrogram","text":"Dendrogram{I, L, Xnp, Lbl, Wre, PrtLbl, Out, OutPrtLbl} <: AbstractDendrogram{I, L}\n\n\n\n\n\n","category":"type"},{"location":"api/#WiringDiagrams.Operation","page":"Library Reference","title":"WiringDiagrams.Operation","text":"Operation{I, L, Alg, Dgm} <: AbstractOperation{I, L}\n\nA multi-function\n\nf: X₁, X₂, ..., Xₙ → Y\n\nof the form\n\nf(x₁, x₂, ..., xₙ) = a(d)(x₁, x₂, ..., xₙ)\n\nfor some wiring diagram algebra a and wiring diagram d.\n\n\n\n\n\n","category":"type"},{"location":"api/#WiringDiagrams.WiringDiagram","page":"Library Reference","title":"WiringDiagrams.WiringDiagram","text":"WiringDiagram{I, L, XPrt, Lbl, Wre, PrtLbl, Out, OutPrtLbl} <: AbstractWiringDiagram{I, L}\n\n\n\n\n\n","category":"type"},{"location":"api/#WiringDiagrams.WiringDiagram-Union{Tuple{L}, Tuple{I}, NTuple{4, Integer}} where {I<:Integer, L}","page":"Library Reference","title":"WiringDiagrams.WiringDiagram","text":"WiringDiagram{I, L}(nb::Integer, nw::Integer, np::Integer, nop::Integer) where {I <: Integer, L}\n\nConstruct an uninitialized diagram with dimensions\n\n|B| = nb\n|W| = nw\n|P| = np\n|O| = nop.\n\n\n\n\n\n","category":"method"},{"location":"api/#AbstractTrees.parent-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"AbstractTrees.parent","text":"parent(dendrogram::AbstractDendrogram)\n\nGet the parent of a box b ∈ B:\n\nparent(b) ∈ C.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.apply-Tuple{AbstractAlgebra, AbstractWiringDiagram, Any}","page":"Library Reference","title":"WiringDiagrams.apply","text":"AbstractAlgebra{A}\n\nGiven a wiring diagram algebra a, a wiring diagram d, and a sequence\n\n(x₁, x₂, ..., xₙ)\n\nof arguments, compute y:\n\ny = a(d)(x₁, x₂, ..., xₙ).\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.arity-Tuple{AbstractOperation}","page":"Library Reference","title":"WiringDiagrams.arity","text":"arity(operation::AbstractOperation)\n\nGet the arity of an operation.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.boxes-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.boxes","text":"boxes(dendrogram::AbstractDendrogram, c::Integer)\n\nGet the ordered pre-image parent⁻¹(c) ⊆ B:\n\n{b ∈ B : parent(b) = c} ⊆ B.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.boxes-Tuple{AbstractDendrogram}","page":"Library Reference","title":"WiringDiagrams.boxes","text":"boxes(dendrogram::AbstractDendrogram)\n\nGet the ordered set of boxes in a dendrogram:\n\nB.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.boxes-Tuple{AbstractWiringDiagram}","page":"Library Reference","title":"WiringDiagrams.boxes","text":"boxes(diagram::AbstractWiringDiagram)\n\nGet the ordered set of boxes in a wiring diagram:\n\nB.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.codomain-Tuple{AbstractOperation}","page":"Library Reference","title":"WiringDiagrams.codomain","text":"codomain(operation::AbstractOperation)\n\nGet the codomain of an operation.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.compose-Tuple{Integer, AbstractOperation, AbstractOperation}","page":"Library Reference","title":"WiringDiagrams.compose","text":"compose(i::Integer, outer::AbstractOperation, inner::AbstractOperation)\n\nGiven operations\n\ninner: (A₁, …, Aₘ) → Bᵢ\nouter: (B₁, …, Bₙ) → C\n\nform the composite operation\n\nouter ∘ᵢ inner: (B₁, …, Bᵢ₋₁, A₁, …, Aₘ, Bᵢ₊₁, …, Bₙ) → C\n\ngiven by the following string diagram:\n\n                  ┌───────┐\nB₁ ───────────────│       │\n ⋮                │       │\nBᵢ₋₁ ─────────────│       │\n      ┌───────┐   │       │\nA₁ ───│       │ Bᵢ│       │\n ⋮    │ inner │───│ outer │─── C\nAₘ ───│       │   │       │\n      └───────┘   │       │\nBᵢ₊₁ ─────────────│       │\n ⋮                │       │\nBₙ ───────────────│       │\n                  └───────┘\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.domain-Tuple{AbstractOperation, Integer}","page":"Library Reference","title":"WiringDiagrams.domain","text":"domain(operation::AbstractOperation, i::Integer)\n\nGet the ith element of the domain of an operation.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.domain-Tuple{AbstractOperation}","page":"Library Reference","title":"WiringDiagrams.domain","text":"domain(operation::AbstractOperation)\n\nGet the domain of an operation.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.eachargument-Tuple{AbstractOperation}","page":"Library Reference","title":"WiringDiagrams.eachargument","text":"eachargument(operation::AbstractOperation)\n\nGet the ordered set\n\n{1, ..., n} ⊆ ℕ\n\nwhere n is the arity of the operation.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.label-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.label","text":"label(dendrogram::AbstractDendrogram, w::Integer)\n\nGet the label of a wire w ∈ W:\n\nlabel(w) ∈ L.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.label-Tuple{AbstractWiringDiagram, Integer}","page":"Library Reference","title":"WiringDiagrams.label","text":"label(diagram::AbstractWiringDiagram, w::Integer)\n\nGet the label of a wire w ∈ W:\n\nlabel(w) ∈ L.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.nb-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.nb","text":"nb(dendrogram::AbstractDendrogram, c::Integer)\n\nGet the size of the pre-image parent⁻¹(c) ⊆ B:\n\n| {b ∈ B : parent(b) = c} |.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.nb-Tuple{AbstractDendrogram}","page":"Library Reference","title":"WiringDiagrams.nb","text":"nb(dendrogram::AbstractDendrogram)\n\nGet the number of boxes in a dendrogram:\n\n|B|.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.nb-Tuple{AbstractWiringDiagram}","page":"Library Reference","title":"WiringDiagrams.nb","text":"nb(diagram::AbstractWiringDiagram)\n\nGet the number of boxes in a wiring diagram:\n\n|B|.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.nob-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.nob","text":"nob(dendrogram::AbstractDendrogram, c::Integer)\n\nGet the size of the pre-image outparent⁻¹(c) ⊆ C:\n\n| {cc ∈ C : outparent(cc) = c} |.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.nob-Tuple{AbstractDendrogram}","page":"Library Reference","title":"WiringDiagrams.nob","text":"nob(dendrogram::AbstractDendrogram)\n\nGet the number of outer boxes in a dendrogram:\n\n|C|.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.nop-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.nop","text":"nop(dendrogram::AbstractDendrogram, c::Integer)\n\nGet the size of the pre-image outbox⁻¹(c) ⊆ Q:\n\n| {q ∈ Q : outbox(q) = c} |.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.nop-Tuple{AbstractDendrogram}","page":"Library Reference","title":"WiringDiagrams.nop","text":"nop(dendrogram::AbstractDendrogram)\n\nGet the number of outer ports in a dendrogram:\n\n|Q|.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.nop-Tuple{AbstractWiringDiagram}","page":"Library Reference","title":"WiringDiagrams.nop","text":"nop(diagram::AbstractWiringDiagram)\n\nGet the number of outer ports in a wiring diagram:\n\n|Q|.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.np-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.np","text":"ports(dendrogram::AbstractDendrogram, b::Integer)\n\nGet the size of the pre-image box⁻¹(b) ⊆ P:\n\n| {p ∈ P : box(p) = b} |.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.np-Tuple{AbstractDendrogram}","page":"Library Reference","title":"WiringDiagrams.np","text":"np(dendrogram::AbstractDendrogram)\n\nGet the number of ports in a dendrogram:\n\n|P|.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.np-Tuple{AbstractWiringDiagram, Integer}","page":"Library Reference","title":"WiringDiagrams.np","text":"np(diagram::AbstractWiringDiagram, b::Integer)\n\nGet the size of the preimage box⁻¹(b) ⊆ P:\n\n| {p ∈ P : box(p) = b} |.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.np-Tuple{AbstractWiringDiagram}","page":"Library Reference","title":"WiringDiagrams.np","text":"np(diagram::AbstractWiringDiagram)\n\nGet the number of ports in a wiring diagram:\n\n|P|.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.nw-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.nw","text":"nw(dendrogram::AbstractDendrogram, c::Integer)\n\nGet the size of the pre-image wirebox⁻¹(c) ⊆ W:\n\n| {w ∈ W : wirebox(w) = c} |.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.nw-Tuple{AbstractDendrogram}","page":"Library Reference","title":"WiringDiagrams.nw","text":"nw(dendrogram::AbstractDendrogram)\n\nGet the number of wires in a dendrogram:\n\n|W|.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.nw-Tuple{AbstractWiringDiagram}","page":"Library Reference","title":"WiringDiagrams.nw","text":"nw(diagram::AbstractWiringDiagram)\n\nGet the number of wires in a wiring diagram.\n\n|W|.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outboxes-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.outboxes","text":"outboxes(dendrogram::AbstractDendrogram, c::Integer)\n\nGet the ordered pre-image outparent⁻¹(c) ⊆ C:\n\n{cc ∈ C : outparent(cc) = c} ⊆ C.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outboxes-Tuple{AbstractDendrogram}","page":"Library Reference","title":"WiringDiagrams.outboxes","text":"outboxes(dendrogram::AbstractDendrogram)\n\nGet the orderd set of outer boxes in a dendrogram:\n\nC.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outparent-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.outparent","text":"outparent(dendrogram::AbstractDendrogram, c::Integer)\n\nGet the parent of an outer box c ∈ C:\n\noutparent(c) ∈ C.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outportlabel-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.outportlabel","text":"outportlabel(dendrogram::AbstractDendrogram, q::Integer)\n\nGet the label of the wire of an outer port q ∈ Q:\n\nlabel(outwire(q)) ∈ L.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outportlabel-Tuple{AbstractWiringDiagram, Integer}","page":"Library Reference","title":"WiringDiagrams.outportlabel","text":"outportlabel(diagram::AbstractWiringDiagram, q::Integer)\n\nGet the label of the wire of an outer port q ∈ Q:\n\nlabel(outwire(q)) ∈ L.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outportlabels-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.outportlabels","text":"outportlabels(dendrogram::AbstractDendrogram, c::Integer)\n\nGet the composite function {1, ..., |outbox⁻¹(c)|} → L:\n\noutportlabels(i) := label(outwire(outport(c, i))).\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outportlabels-Tuple{AbstractWiringDiagram}","page":"Library Reference","title":"WiringDiagrams.outportlabels","text":"outlabels(diagram::AbstractWiringDiagram)\n\nGet the composite function Q → L:\n\noutlabels(q) := label(outwire(q))\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outports-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.outports","text":"outports(dendrogram::AbstractDendrogram, c::Integer)\n\nGet the ordered pre-image outbox⁻¹(c) ⊆ Q:\n\n{q ∈ Q : outbox(q) = c} ⊆ Q.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outports-Tuple{AbstractDendrogram}","page":"Library Reference","title":"WiringDiagrams.outports","text":"outports(dendrogram::AbstractDendrogram)\n\nGet the ordered set of outer ports in a dendrogram:\n\nQ.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outports-Tuple{AbstractWiringDiagram}","page":"Library Reference","title":"WiringDiagrams.outports","text":"outports(diagram::AbstractWiringDiagram)\n\nGet the ordered set of outer ports in a wiring diagram:\n\nQ.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outportwires-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.outportwires","text":"outportwires(dendrogram::AbstractDendrogram, c::Integer)\n\nGet the composite function {1, ..., |outbox⁻¹(c)|} → W:\n\noutportwires(i) := outwire(outport(c, i)).\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outportwires-Tuple{AbstractWiringDiagram}","page":"Library Reference","title":"WiringDiagrams.outportwires","text":"outportwires(diagram::AbstractWiringDiagram)\n\nGet the function Q → W:\n\noutportwires(q) := outwire(q)\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outwire-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.outwire","text":"outwire(dendrogram::AbstractDendrogram, q::Integer)\n\nGet the wire of an outer port q ∈ O:\n\noutwire(q) ∈ W.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.outwire-Tuple{AbstractWiringDiagram, Integer}","page":"Library Reference","title":"WiringDiagrams.outwire","text":"outwire(diagram::AbstractWiringDiagram, q::Integer)\n\nGet the wire of an outer port q ∈ O:\n\noutwire(q) ∈ W.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.portlabel-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.portlabel","text":"portlabel(dendrogram::AbstractDendrogram, p::Integer)\n\nGet the label of the wire of a port p ∈ P:\n\nlabel(wire(p)) ∈ L.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.portlabel-Tuple{AbstractWiringDiagram, Integer}","page":"Library Reference","title":"WiringDiagrams.portlabel","text":"portlabel(diagram::AbstractWiringDiagram, p::Integer)\n\nGet the label of the wire of a port p ∈ P:\n\nlabel(wire(p)) ∈ L.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.portlabels-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.portlabels","text":"portlabels(dendrogram::AbstractDendrogram, b::Integer)\n\nGet the composite function {1, ..., |box⁻¹(b)|} → L:\n\nportlabels(i) := label(wire(port(b, i))).\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.portlabels-Tuple{AbstractWiringDiagram, Integer}","page":"Library Reference","title":"WiringDiagrams.portlabels","text":"portlabels(diagram::AbstractWiringDiagram, b::Integer)\n\nGet the composite function {1, ..., |box⁻¹(b)|} → L:\n\nportlabels(i) := label(wire(port(b, i))).\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.ports-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.ports","text":"ports(dendrogram::AbstractDendrogram, b::Integer)\n\nGet the ordered pre-image box⁻¹(b) ⊆ P:\n\n{p ∈ P : box(p) = b} ⊆ P.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.ports-Tuple{AbstractDendrogram}","page":"Library Reference","title":"WiringDiagrams.ports","text":"ports(dendrogram::AbstractDendrogram)\n\nGet the ordered set of ports in a dendrogram:\n\nP.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.ports-Tuple{AbstractWiringDiagram, Integer}","page":"Library Reference","title":"WiringDiagrams.ports","text":"ports(diagram::AbstractWiringDiagram, b::Integer)\n\nGet the ordered preimage box⁻¹(b) ⊆ P:\n\n{p ∈ P : box(p) = b} ⊆ P.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.ports-Tuple{AbstractWiringDiagram}","page":"Library Reference","title":"WiringDiagrams.ports","text":"ports(diagram::AbstractWiringDiagram)\n\nGet the ordered set of ports in a wiring diagram:\n\nP.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.portwires-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.portwires","text":"portwires(dendrogram::AbstractDendrogram, b::Integer)\n\nGet the composite function {1, ..., |box⁻¹(b)|} → W:\n\nportwires(i) := wire(port(b, i)).\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.portwires-Tuple{AbstractWiringDiagram, Integer}","page":"Library Reference","title":"WiringDiagrams.portwires","text":"portwires(diagram::AbstractWiringDiagram, b::Integer)\n\nGet the composite function {1, ..., |box⁻¹(b)|} → W:\n\nportwires(i) := wire(port(b, i)).\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.portwires-Tuple{AbstractWiringDiagram}","page":"Library Reference","title":"WiringDiagrams.portwires","text":"portwires(diagram::AbstractWiringDiagram)\n\nGet the function P → W:\n\nportwires(p) := wire(p)\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.wire-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.wire","text":"wire(dendrogram::AbstractDendrogram, p::Integer)\n\nGet the wire of a port p ∈ P:\n\nwire(p) ∈ W.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.wire-Tuple{AbstractWiringDiagram, Integer}","page":"Library Reference","title":"WiringDiagrams.wire","text":"wire(diagram::AbstractWiringDiagram, p::Integer)\n\nGet the wire of a port p ∈ P:\n\nwire(p) ∈ W.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.wirelabels-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.wirelabels","text":"wirelabels(dendrogram::AbstractDendrogram, c::Integer)\n\nGet the composite function {1, ..., |wirebox⁻¹(c)|} → L:\n\nwirelabels(i) := label(boxwire(c, i))\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.wirelabels-Tuple{AbstractDendrogram}","page":"Library Reference","title":"WiringDiagrams.wirelabels","text":"wirelabels(dendrogram::AbstractDendrogram)\n\nGet the function of W → L:\n\nwirelabels(w) := label(w).\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.wirelabels-Tuple{AbstractWiringDiagram}","page":"Library Reference","title":"WiringDiagrams.wirelabels","text":"wirelabels(diagram::AbstractWiringDiagram)\n\nGet the function W → L:\n\nwirelabels(w) := label(w)\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.wires-Tuple{AbstractDendrogram, Integer}","page":"Library Reference","title":"WiringDiagrams.wires","text":"wires(dendrogram::AbstractDendrogram, c::Integer)\n\nGet the ordered pre-image wirebox⁻¹(c) ⊆ W:\n\n{w ∈ W : wirebox(w) = c} ⊆ W.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.wires-Tuple{AbstractDendrogram}","page":"Library Reference","title":"WiringDiagrams.wires","text":"wires(dendrogram::AbstractDendrogram)\n\nGet the ordered set of wires in a dendrogram:\n\nW.\n\n\n\n\n\n","category":"method"},{"location":"api/#WiringDiagrams.wires-Tuple{AbstractWiringDiagram}","page":"Library Reference","title":"WiringDiagrams.wires","text":"wires(diagram::AbstractWiringDiagram)\n\nGet the ordered set of wires in a wiring diagram:\n\nW.\n\n\n\n\n\n","category":"method"}]
}
